@model IEnumerable<EquipLink.Models.Equipment>
@{
    ViewData["Title"] = "Manage Equipment";
}

<section class="py-5">
    <div class="container-fluid dashboard-container">
        <div class="row">
            <!-- Sidebar -->
            <partial name="~/Views/Provider/_ProviderSidebar.cshtml" />

            <!-- Main Content -->
            <div class="col-lg-9 col-md-8">
                <h1 class="fw-bold mb-4">Manage Equipment</h1>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <!-- Equipment Table -->
                <div class="card dashboard-card mb-4">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h3 class="fw-bold">Equipment List</h3>

                            <div class="d-flex">
                                <!-- Server-side search form -->
                                <form method="get" class="d-flex me-2">
                                    <input type="text"
                                           name="searchTerm"
                                           value="@ViewBag.SearchTerm"
                                           class="form-control me-2"
                                           placeholder="Search equipment..."
                                           style="max-width: 200px;">
                                    <button type="submit" class="btn btn-outline-secondary me-2">
                                        <i class="fas fa-search"></i>
                                    </button>
                                    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm as string))
                                    {
                                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary me-2">
                                            <i class="fas fa-times"></i>
                                        </a>
                                    }
                                </form>

                                <a href="@Url.Action("Create", "Equipment", new { area = "Provider" })"
                                   class="btn btn-primary action-btn">
                                    <i class="fas fa-plus me-2"></i> Add Equipment
                                </a>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table bordered-table mb-0">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Image</th>
                                        <th>Name</th>
                                        <th style="width: 8%; justify-content: center;">Type</th>
                                        <th style="width: 7%; justify-content: center;">Condition</th>
                                        <th style="width: 10%; justify-content: center;">Price</th>
                                        <th style="width: 10%; justify-content: center;">Insurance Per Day</th>
                                        <th style="width: 12%; justify-content: center;">Added At</th>
                                        <th style="width: 4%; justify-content: center;">Requests</th>
                                        <th style="width: 13%; justify-content: center;" class="actions-cell">Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="equipmentTableBody">
                                    @foreach (var equipment in Model)
                                    {
                                        <tr>
                                            <td>@equipment.EquId</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(equipment.EquImage))
                                                {
                                                    var imagePath = equipment.EquImage.StartsWith("/uploads/")
                                                    ? equipment.EquImage
                                                    : $"/uploads/{equipment.EquImage}";

                                                    <div class="position-relative d-inline-block">
                                                        <img src="@imagePath"
                                                             alt="@equipment.EquName"
                                                             class="img-thumbnail rounded-3 shadow-sm hover-zoom"
                                                             style="width: 50px; height: 50px; object-fit: cover; cursor: pointer;"
                                                             data-bs-toggle="modal"
                                                             data-bs-target="#imageModal@(equipment.EquId)"
                                                             title="Click to view full size"
                                                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                                        <!-- Fallback for broken images -->
                                                        <div class="d-none align-items-center justify-content-center bg-light rounded-3 shadow-sm"
                                                             style="width: 50px; height: 50px; position: absolute; top: 0; left: 0;">
                                                            <i class="fas fa-exclamation-triangle text-warning" style="font-size: 1.2rem;" title="Image not found"></i>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="d-flex align-items-center justify-content-center bg-light rounded-3 shadow-sm"
                                                         style="width: 50px; height: 50px;">
                                                        <i class="fas fa-image text-muted" style="font-size: 1.5rem;"></i>
                                                    </div>
                                                }
                                            </td>
                                            <td>@equipment.EquName</td>
                                            <td class="text-center align-middle">
                                                @if (!string.IsNullOrEmpty(equipment.EquType))
                                                {
                                                    <span class="badge bg-secondary bg-opacity-10 text-secondary border border-secondary border-opacity-25 px-3 py-2">
                                                       @equipment.EquType
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">
                                                        Uncategorized
                                                    </span>
                                                }
                                            </td>
                                            <td class="text-center align-middle">
                                                @{
                                                    var conditionClass = equipment.EquCondition switch
                                                    {
                                                        "Good" => "bg-info",
                                                        "Fair" => "bg-warning",
                                                        "Poor" => "bg-danger",
                                                        "Needs Repair" => "bg-danger",
                                                        _ => "bg-secondary"
                                                    };

                                                    var conditionIcon = equipment.EquCondition switch
                                                    {
                                                        "Good" => "fa-thumbs-up",
                                                        "Fair" => "fa-exclamation-triangle",
                                                        "Poor" or "Needs Repair" => "fa-times-circle",
                                                        _ => "fa-question-circle"
                                                    };
                                                }
                                                <span class="badge @conditionClass px-2 py-1">
                                                    @equipment.EquCondition
                                                </span>
                                            </td>
                                            <td class="align-middle">
                                                <div class="d-flex flex-column">
                                                    <span> @equipment.EquPrice.ToString("N2") <br /> SAR </span>
                                                </div>
                                            </td>
                                            <td class="text-center align-middle">
                                                @if (equipment.EquType?.ToLower() == "rent" && equipment.Requests?.Any() == true)
                                                {
                                                    var latestRequest = equipment.Requests.OrderByDescending(r => r.ReqDate).First();
                                                    <text>SAR @latestRequest.ReqInsurancePerDay?.ToString("N2")</text>
                                                }
                                                else
                                                {
                                                    <text>-</text>
                                                }
                                            </td>
                                            <td>@equipment.EquCreatedDate?.ToString("yyyy-MM-dd")</td>
                                            <td class="actions-cell text-center align-middle">
                                                <button class="btn btn-xs btn-outline-info"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#requestModal@(equipment.EquId)"
                                                        title="Request Approval"
                                                        data-toggle="tooltip">
                                                    <i class="fas fa-file-alt"></i>
                                                    <span class="action-text">Request</span>
                                                </button>
                                            </td>
                                            <td class="actions-cell">
                                                <div class="btn-group" role="group" aria-label="Equipment actions">
                                                    <a href="@Url.Action("Edit", "Equipment", new { area = "Provider", id = equipment.EquId })"
                                                       class="btn btn-xs btn-info edit-phase"
                                                       title="Edit Equipment"
                                                       data-toggle="tooltip">
                                                        <i class="fas fa-edit"></i>
                                                        <span class="action-text">Edit</span>
                                                    </a>

                                                    <button type="button"
                                                            class="btn btn-xs btn-danger"
                                                            title="Delete Equipment"
                                                            data-toggle="tooltip"
                                                            onclick="confirmDelete(@equipment.EquId, '@equipment.EquName')">
                                                        <i class="fas fa-trash"></i>
                                                        <span class="action-text">Delete</span>
                                                    </button>

                                                    <!-- Hidden delete form -->
                                                    <form id="deleteForm@(equipment.EquId)"
                                                          asp-action="Destroy"
                                                          asp-route-id="@equipment.EquId"
                                                          method="post"
                                                          style="display:none;">
                                                        @Html.AntiForgeryToken()
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Add pagination after the table -->
                        @if (ViewBag.TotalPages > 1)
                        {
                            <nav aria-label="Equipment pagination">
                                <ul class="pagination justify-content-center">
                                    @if (ViewBag.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, page = ViewBag.CurrentPage - 1 })">Previous</a>
                                        </li>
                                    }

                                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                    {
                                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, page = i })">@i</a>
                                        </li>
                                    }

                                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, page = ViewBag.CurrentPage + 1 })">Next</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Enhanced Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteConfirmModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <i class="fas fa-trash-alt fa-3x text-danger mb-3"></i>
                    <h5>Are you sure you want to delete this equipment?</h5>
                    <p class="text-muted mb-0">Equipment Name: <strong id="equipmentNameToDelete"></strong></p>
                    <p class="text-muted"><small>This action cannot be undone.</small></p>
                </div>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="fas fa-trash me-2"></i>Delete Equipment
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Request Modals -->
@{
    var requests = ViewBag.Requests as Dictionary<int, List<EquipLink.Models.Request>>;
}
<!-- Enhanced Modal with better validation and UX -->
@foreach (var equipment in Model)
{
    var equipmentRequests = requests?.ContainsKey(equipment.EquId) == true ? requests[equipment.EquId] : new List<EquipLink.Models.Request>();

    <div class="modal fade" id="requestModal@(equipment.EquId)" tabindex="-1"
         aria-labelledby="requestModalLabel@(equipment.EquId)" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="requestModalLabel@(equipment.EquId)">
                        <i class="fas fa-file-alt me-2"></i>
                        Approval Requests for @equipment.EquName
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Previous Requests Section -->
                    <div class="mb-4">
                        <h6 class="fw-bold mb-3">
                            <i class="fas fa-history me-2"></i>Previous Requests
                        </h6>
                        @if (!equipmentRequests.Any())
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>
                                No previous requests found for this equipment.
                            </div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th><i class="fas fa-calendar me-1"></i>Date</th>
                                            <th><i class="fas fa-calendar me-1"></i>Insurance Per Day (SAR)</th>
                                            <th><i class="fas fa-comment me-1"></i>Description</th>
                                            <th><i class="fas fa-check-circle me-1"></i>Status</th>
                                            <th><i class="fas fa-sticky-note me-1"></i>Admin Notes</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var request in equipmentRequests)
                                        {
                                            <tr>
                                                <td>@request.ReqDate.ToString("MMM dd, yyyy")</td>
                                                <td>@request.ReqInsurancePerDay?.ToString("N2")</td>
                                                <td>@request.ReqDescription</td>
                                                <td>
                                                    <span class="badge @(request.ReqApprovalStatus == "Pending" ? "bg-warning" :
                                                                                                                                  request.ReqApprovalStatus == "Approved" ? "bg-success" : "bg-danger")">
                                            <i class="fas @(request.ReqApprovalStatus == "Pending" ? "fa-clock" :
                                                                                                                      request.ReqApprovalStatus == "Approved" ? "fa-check" : "fa-times") me-1"></i>
                                            @request.ReqApprovalStatus
                                        </span>
                                    </td>
                                    <td>
                                        @if (string.IsNullOrEmpty(request.ReqAdminNotes))
                                                    {
                                                        <span class="text-muted">No notes</span>
                                                    }
                                                    else
                                                    {
                                                        @request.ReqAdminNotes
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>

                    <!-- New Request Form -->
                    <div class="border-top pt-4">
                        <h6 class="fw-bold mb-3">
                            <i class="fas fa-plus-circle me-2"></i>Submit New Request
                        </h6>
                        <form asp-action="StoreRequest" asp-route-id="@equipment.EquId" method="post" id="requestForm@(equipment.EquId)">
                            @Html.AntiForgeryToken()
                            <div class="mb-3">
                                <label for="requestDescription@(equipment.EquId)" class="form-label fw-bold">
                                    <i class="fas fa-comment me-1"></i>Description
                                    <span class="text-danger">*</span>
                                </label>
                                <textarea class="form-control"
                                      id="requestDescription@(equipment.EquId)"
                                      name="ReqDescription"
                                      rows="4"
                                      placeholder="Please describe your request for approval..."
                                      required
                                      maxlength="500"></textarea>
                                <div class="form-text">
                                    <small class="text-muted">
                                        <span id="charCount@(equipment.EquId)">0</span>/500 characters
                                    </small>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between">
                                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                                    <i class="fas fa-times me-2"></i>Cancel
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane me-2"></i>Submit Request
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Update the image modal section -->
@foreach (var equipment in Model)
{
    <div class="modal fade" id="imageModal@(equipment.EquId)" tabindex="-1"
         aria-labelledby="imageModalLabel@(equipment.EquId)" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="imageModalLabel@(equipment.EquId)">
                        @equipment.EquName - Image
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center">
                    @if (!string.IsNullOrEmpty(equipment.EquImage))
                    {
                        var imagePath = equipment.EquImage.StartsWith("/uploads/")
                        ? equipment.EquImage
                        : $"/uploads/{equipment.EquImage}";

                        <img src="@imagePath"
                             alt="@equipment.EquName"
                             class="img-fluid rounded"
                             style="max-height: 80vh;"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="text-muted" style="display: none;">
                            <i class="fas fa-exclamation-triangle fa-3x mb-3 text-warning"></i>
                            <p>Image not found or corrupted</p>
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">
                            <i class="fas fa-image fa-3x mb-3"></i>
                            <p>No image available</p>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}




@section Scripts {
    <script>
        let currentDeleteForm = null;

        function confirmDelete(equipmentId, equipmentName) {
            currentDeleteForm = document.getElementById('deleteForm' + equipmentId);
            document.getElementById('equipmentNameToDelete').textContent = equipmentName;

            const modal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            modal.show();
        }

        document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
            if (currentDeleteForm) {
                currentDeleteForm.submit();
            }
        });

        // Initialize tooltips and other functionality
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add character counter for textareas - Fixed approach
            var equipmentIds = @Html.Raw(Json.Serialize(Model.Select(e => e.EquId).ToList()));

            equipmentIds.forEach(function(equipmentId) {
                var textarea = document.getElementById('requestDescription' + equipmentId);
                var charCount = document.getElementById('charCount' + equipmentId);

                if (textarea && charCount) {
                    textarea.addEventListener('input', function() {
                        charCount.textContent = this.value.length;
                    });
                }
            });

            // Client-side search functionality (if you have a search input with id 'searchEquipment')
            const searchInput = document.getElementById('searchEquipment');
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    const rows = document.querySelectorAll('#equipmentTableBody tr');

                    rows.forEach(row => {
                        const text = row.textContent.toLowerCase();
                        row.style.display = text.includes(searchTerm) ? '' : 'none';
                    });
                });
            }
        });
    </script>
}

@section Styles {
    <style>
        /* Enhanced bordered table styling */
        .bordered-table {
            border-collapse: separate;
            border-spacing: 0;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            overflow: hidden;
            width: 100%;
            max-width: 100%;
            margin: 0 auto;
        }

            .bordered-table th,
            .bordered-table td {
                border: 1px solid #dee2e6;
                padding: 0.65rem !important;
                vertical-align: middle;
                position: relative;
            }

            .bordered-table th {
                background-color: #f8f9fa;
                font-weight: 600;
                border-bottom: 2px solid #dee2e6;
            }

            .bordered-table thead th:first-child {
                border-top-left-radius: 7px;
            }

            .bordered-table thead th:last-child {
                border-top-right-radius: 7px;
            }

            .bordered-table tbody tr:last-child td:first-child {
                border-bottom-left-radius: 7px;
            }

            .bordered-table tbody tr:last-child td:last-child {
                border-bottom-right-radius: 7px;
            }

            /* Content fitting adjustments */
            .bordered-table td {
                max-width: 0;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }

                .bordered-table td > div {
                    overflow: hidden;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                }

            .bordered-table .actions-cell .btn-group {
                display: flex;
                flex-wrap: nowrap;
                gap: 0.5rem;
            }

            .bordered-table .actions-cell .btn {
                min-width: 32px;
                height: 32px;
                padding: 0;
                border: none;
                border-radius: 6px;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
                display: inline-flex;
                align-items: center;
                justify-content: center;
            }


                .bordered-table .actions-cell .btn i {
                    transition: all 0.3s ease;
                    font-size: 20px;
                }

                .bordered-table .actions-cell .btn .action-text {
                    position: absolute;
                    opacity: 0;
                    transform: translateX(-12px);
                    transition: all 0.3s ease;
                    font-size: 12px;
                    font-weight: 500;
                    white-space: nowrap;
                }

                .bordered-table .actions-cell .btn:hover {
                    min-width: 60px;
                    /* padding: 0 10px; */
                    /* justify-content: flex-start; */
                }

                .bordered-table .actions-cell .btn:hover i {
                    opacity: 0;
                    transform: translateX(10px);
                }

                .bordered-table .actions-cell .btn:hover .action-text {
                    opacity: 1;
                    transform: translateX(0);
                }

            /* Specific button colors */
            .bordered-table td .btn-danger {
                background: #fef2f2 !important;
                color: #dc2626 !important;
            }

            .bordered-table td .btn-info {
                background: #eff6ff !important;
                color: #2563eb !important;
            }

            .bordered-table td .btn-outline-info {
                background: #eff6ff !important;
                color: #0dcaf0 !important;
              
            }


            .bordered-table td .btn-danger:hover {
                background: #dc2626 !important;
                color: white !important;
            }

            .bordered-table td .btn-outline-info:hover {
                background: #0dcaf0 !important;
                color: white !important;
            }

            .bordered-table td .btn-info:hover {
                background: #2563eb !important;
                color: white !important;
                min-width: 95px !important;
            }

            /* Add margin between buttons */
            .bordered-table td .btn + .btn {
                margin-left: 8px;
            }

        .field-validation-valid {
            display: block;
            min-height: 20px;
        }

        /* Badge improvements */
        .bordered-table .badge {
            font-size: 0.65rem;
            font-weight: 400;
            padding: 0.35em 0.65em;
        }

        /* Image thumbnail styling */
        .img-thumbnail {
            border: 1px solid #dee2e6;
            transition: all 0.2s ease-in-out;
            width: 60px;
            height: 60px;
            object-fit: cover;
        }

            .img-thumbnail:hover {
                border-color: #0d6efd;
                box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
            }

        /* Pagination styling */
        .pagination {
            margin-top: 1.5rem;
        }


        /* Add css for  tooltip */
        .form-group {
            position: relative;
            margin-top: 25px;
        }

        /* Fix for equipment name column to show full text */
        .bordered-table td.name-column {
            white-space: normal !important;
            max-width: none !important;
            word-wrap: break-word;
            overflow: visible !important;
            text-overflow: clip !important;
        }

            .bordered-table td.name-column > div {
                white-space: normal !important;
                overflow: visible !important;
                text-overflow: clip !important;
                word-wrap: break-word;
            }


        /* Responsive adjustments */
        @@media (max-width: 992px) {
            .bordered-table th, .bordered-table td {
                padding: 0.5rem;
                font-size: 0.9rem;
            }

            .bordered-table .actions-cell .btn {
                min-width: 28px;
                height: 28px;
            }
        }

        @@media (max-width: 768px) {
            .table-responsive {
                border-radius: 8px;
                border: 1px solid #dee2e6;
            }

            .bordered-table {
                min-width: 700px;
            }

            .img-thumbnail {
                width: 50px;
                height: 50px;
            }
        }
    </style>
}